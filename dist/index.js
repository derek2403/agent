(()=>{"use strict";class e{constructor(e){this.body=e.body,this.queries=e.queries,this.headers=e.headers,this.method=e.method,this.path=e.path,this.secret=e.secret}async json(){return JSON.parse(this.body)}}class t{constructor(e,t){this.status=t?.status??200,this.body=e,this.headers={"Content-Type":"application/json","Access-Control-Allow-Origin":"*",...t?.headers}}}const n={ETH:"https://hermes.pyth.network/v2/updates/price/latest?ids%5B%5D=0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace",OP:"https://hermes.pyth.network/v2/updates/price/latest?ids%5B%5D=0x385f64d993f7b77d8182ed5003d97c60aa3361f3cecfe711544d2d59165e9bdf",POLY:"https://hermes.pyth.network/v2/updates/price/latest?ids%5B%5D=0x3fa4252848f9f0a1480be62745a4629d9eb1322aebab8a791e344b3b9c1adcf5"};async function s(e){try{console.log(`Fetching price from URL: ${e}`);const t=await fetch(e);if(!t.ok)return console.error(`HTTP error! status: ${t.status}`),null;const n=await t.json();console.log("Received data:",JSON.stringify(n));const s=n.parsed[0]?.price;if(s){const e=parseFloat(s.price.toString())/Math.pow(10,Math.abs(s.expo));return console.log(`Calculated price: ${e}`),e}console.error("No price data found in the response")}catch(e){console.error("Error fetching price:",e)}return null}async function o(){console.log("Starting to fetch current prices");const e={};for(const[t,o]of Object.entries(n))console.log(`Fetching price for ${t}`),e[t]=await s(o),console.log(`Price for ${t}: ${e[t]}`);return console.log("Finished fetching prices:",e),e}async function i(e){const n=e.secret||{},s=e.queries,i=n.apiKey||"sk-qVBlJkO3e99t81623PsB0zHookSQJxU360gDMooLenN01gv2",r=s.chatQuery?s.chatQuery[0]:"What is the best chain to stake ETH?";let a={message:"",index:0,bestChain:"",receiverAddress:"",wallets:[]};try{const e=r.toLowerCase();if(e.includes("maximum")){console.log("Staking query detected"),a.index=1;const e=await async function(){const e="https://benchmarks.pyth.network/v1/updates/price",t="0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace",n=e=>new Date(1e3*e).toISOString().replace("T"," ").substring(0,19);async function s(s){const o=Math.floor(s.getTime()/1e3),i=`${e}/${o}/60?ids=${t}&parsed=true&unique=true`;try{const e=await fetch(i),t=await e.json(),s=t[0]?.parsed[0]?.price;if(s){const e=parseFloat(s.price)/Math.pow(10,Math.abs(s.expo));return{datetime:n(s.publish_time),price:e}}return null}catch(e){return console.error(`Error fetching price for ${n(o)}:`,e),null}}const o=(()=>{const e=new Date;e.setMinutes(e.getMinutes()-1),e.setSeconds(0,0);const t=new Date(e.getTime()-6e5);return[t,new Date(t.getTime()+3e5),e]})().map((e=>s(e)));return(await Promise.all(o)).filter((e=>null!==e))}(),t=await o(),n=Object.fromEntries(Object.entries(t).filter((([e,t])=>null!==t)));if(0===Object.keys(n).length)a.message="Unable to fetch current prices. Please try again later.";else{const t=await async function(e,t){console.log("Starting predictions");const n={};for(const s of Object.keys(t)){console.log(`Predicting for ${s}`);const o=e.map((e=>({datetime:e.datetime,price:e.price*(t[s]/t.ETH)})));console.log(`Scaled history for ${s}:`,o),n[s]=await l(o),console.log(`Prediction for ${s}: ${n[s]}`)}return console.log("All predictions:",n),n}(e,n),s=function(e,t){console.log("Getting best chain"),console.log("Predictions:",e),console.log("Current Prices:",t);let n="",s=-1/0;for(const o of Object.keys(e)){const i=e[o]-t[o];console.log(`${o} difference: ${i}`),i>s&&(s=i,n=o)}return console.log(`Best chain: ${n}, Max difference: ${s}`),n||"Unable to determine best chain"}(t,n);a.message=`The best chain to stake based on predictions is: ${s}.`,a.bestChain=s}}else if(e.includes("list")){console.log("List wallets query detected");const e=await async function(){return console.log("Listing wallets. Implementation pending."),["Wallet1","Wallet2"]}();a.message=`Available wallets: ${e.join(", ")}`,a.index=2,a.wallets=e}else if(e.includes("transfer")){console.log("Transfer funds query detected");const[e,t,n]=function(e){const t=e.split(" "),n=t.indexOf("to"),s=t.indexOf("on"),o=t[n+1],i=t[s+1];return["Transfer",i,o]}(r);await async function(e,t){console.log(`Initiating transfer to ${t} on ${e}. Implementation pending.`)}(t,n),a.message=`Transfer initiated to ${n} on ${t}.`,a.index=3,a.receiverAddress=n}else if(e.includes("create")){console.log("Create account query detected");const e=(c=r).toLowerCase().includes("ethereum")?"Ethereum":c.toLowerCase().includes("optimism")?"Optimism":c.toLowerCase().includes("polygon")?"Polygon":"Unknown";await async function(e){console.log(`Creating account on ${e}. Implementation pending.`)}(e),a.message=`Account creation initiated for ${e}.`,a.index=4}else if(e.includes("stake")){console.log("Stake all"),a.index=5;const e=await o(),t=Object.fromEntries(Object.entries(e).filter((([e,t])=>null!==t)));if(0===Object.keys(t).length)a.message="Unable to fetch current prices. Please try again later.";else{const e=Object.keys(t).reduce(((e,n)=>t[n]>t[e]?n:e),Object.keys(t)[0]),n=t[e];a.message=`The chain with the maximum price is ${e} with a price of ${n}.`}}else{console.log("Default case: forwarding to AI model");const e=await fetch("https://api.red-pill.ai/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${i}`},body:JSON.stringify({messages:[{role:"user",content:`${r}`}],model:"gpt-4o"})});if(!e.ok)throw new Error(`AI model responded with status ${e.status}`);const t=await e.json();a.message=t.error?t.error:t.choices[0].message.content,a.index=6}}catch(e){console.error("Error:",e),a.message=e.message,a.index=-1}var c;return console.log("Final Result:",a),new t(JSON.stringify(a),{headers:{"Content-Type":"application/json"},status:200})}function r(e){return 1/(1+Math.exp(-e))}function a(e){return Math.tanh(e)}class c{constructor(e,t){this.wf=this.initializeWeight(t,e+t),this.wi=this.initializeWeight(t,e+t),this.wc=this.initializeWeight(t,e+t),this.wo=this.initializeWeight(t,e+t),this.bf=new Array(t).fill(0),this.bi=new Array(t).fill(0),this.bc=new Array(t).fill(0),this.bo=new Array(t).fill(0)}initializeWeight(e,t){return Array.from({length:e},(()=>Array.from({length:t},(()=>Math.random()-.5))))}forward(e,t,n){const s=[...e,...t],o=this.wf.map(((e,t)=>r(e.reduce(((e,t,n)=>e+t*s[n]),0)+this.bf[t]))),i=this.wi.map(((e,t)=>r(e.reduce(((e,t,n)=>e+t*s[n]),0)+this.bi[t]))),c=this.wc.map(((e,t)=>a(e.reduce(((e,t,n)=>e+t*s[n]),0)+this.bc[t]))),l=this.wo.map(((e,t)=>r(e.reduce(((e,t,n)=>e+t*s[n]),0)+this.bo[t]))),h=n.map(((e,t)=>e*o[t]+i[t]*c[t]));return[h.map(((e,t)=>l[t]*a(e))),h]}}async function l(e){const t=e.map((e=>e.price)),n=function(e){const t=Math.min(...e),n=Math.max(...e);return e.map((e=>(e-t)/(n-t)))}(t),s=new c(1,4);for(let e=0;e<100;e++){let t=0;for(let e=10;e<n.length;e++){const o=n.slice(e-10,e),i=n[e];let r=new Array(4).fill(0),a=new Array(4).fill(0);for(const e of o)[r,a]=s.forward([e],r,a);const c=r[0];t+=(c-i)**2;const l=2*(c-i);r=r.map((e=>e-.01*l))}e%10==0&&console.log(`Epoch ${e}, Loss: ${t/(n.length-10)}`)}const o=n.slice(-10);let i=new Array(4).fill(0),r=new Array(4).fill(0);for(const e of o)[i,r]=s.forward([e],i,r);return function(e,t){const n=Math.min(...t),s=Math.max(...t);return e*(s-n)+n}(i[0],t)}(async function(n){return await async function(n,s){const o=JSON.parse(s);let i;const r=o.method,a=new e(o);return"GET"==r&&n.GET?i=await n.GET(a):"POST"==r&&n.POST?i=await n.POST(a):"PATCH"==r&&n.PATCH?i=await n.PATCH(a):"PUT"==r&&n.PUT?i=await n.PUT(a):(i=new t("Not Found"),i.status=404),JSON.stringify(i)}({GET:i},n)}).apply(null,globalThis.scriptArgs).then((e=>globalThis.scriptOutput=e)).catch((e=>globalThis.scriptOutput=JSON.stringify({error:e,success:!1})))})();